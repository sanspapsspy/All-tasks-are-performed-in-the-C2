#include <stdio.h>
#include <stdlib.h>
#include <stdarg.h>
#include <math.h>

// Функция принимает переменное число аргументов,
// рассчитывая среднее арифметическое, среднее геометрическое,
// среднее гармоническое и медиану.
void calculate_averages(double* arithmetic_mean,
                        double* geometric_mean,
                        double* harmonic_mean,
                        double* median,
                        va_list args, size_t count)
{
    // Проверяем, что количество элементов больше нуля
    if(count <= 0){
        *arithmetic_mean = NAN;
        *geometric_mean = NAN;
        *harmonic_mean = NAN;
        *median = NAN;
        return;
    }
    
    double sum = 0.0;      // Сумма значений для среднего арифметического
    double product = 1.0;  // Произведение значений для среднего геометрического
    double reciprocal_sum = 0.0;   // Суммарный обратный элемент для среднего гармонического

    // Массив для хранения значений для расчета медианы
    double values[count];

    for(size_t i = 0; i < count; ++i){
        double value = va_arg(args, double);
        
        sum += value;
        product *= value;
        reciprocal_sum += 1 / value;
        
        values[i] = value;
    }

    // Среднее арифметическое
    *arithmetic_mean = sum / count;

    // Среднее геометрическое
    *geometric_mean = pow(product, 1.0 / count);

    // Среднее гармоническое
    *harmonic_mean = count / reciprocal_sum;

    // Расчет медианы
    qsort(values, count, sizeof(double), (int(*)(const void*, const void*))dcmp);

    if(count % 2 != 0){ // Нечётное количество элементов
        *median = values[(count - 1)/2];   
    } else {            // Чётное количество элементов
        int mid_idx = count / 2;
        *median = (values[mid_idx - 1] + values[mid_idx]) / 2.0;
    }
}

// Вспомогательная функция сравнения двух double-значений для сортировки массива
int dcmp(const void* a, const void* b){
    double da = *(double*)a;
    double db = *(double*)b;
    return (da > db) ? 1 : ((da < db) ? -1 : 0); // Стандартное сравнение
}

// Основная программа с демонстрацией функции
int main() {
    double arithMean, geomMean, harmMean, mediana;
    size_t num_count = 5;

    // Передаем список чисел через макросы va_start и va_end
    va_list argList;
    va_start(argList, num_count);
    double numbers[] = {1.0, 2.0, 3.0, 4.0, 5.0};
    for(int i=0;i<num_count;i++){
        va_arg(argList,double)=numbers[i];
    }
    calculate_averages(&arithMean, &geomMean, &harmMean, &mediana, argList, num_count);
    va_end(argList);

    printf("Среднее арифметическое: %.2f\n", arithMean);
    printf("Среднее геометрическое: %.2f\n", geomMean);
    printf("Среднее гармоническое: %.2f\n", harmMean);
    printf("Медиана: %.2f\n", mediana);

    return 0;
}
